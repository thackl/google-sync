* Syncing tsv files with googledrive (and a git repo)
I want to find a way to sync a metadata git repo and google sheet - to get best
of both worlds

There seem to be two google sheet APIs (both by Jenny Bryan)
- googlesheets: https://cran.r-project.org/web/packages/googlesheets/vignettes/basic-usage.html
- googlesheets4: https://github.com/tidyverse/googlesheets4 (major reboot, in devel)


** googlesheets

googlesheets allows me to easily download (sheet -> csv) and upload (csv
->sheet) files, and extract tabs (worksheets). 

But 

- it doesn't really provide an "update" sheet with new content function, other
  than doing actual spreadsheet transformations.
- it doesn't allow to set the 'location' of a new spreadsheet (folder to put it into)

#+BEGIN_SRC R
library(tidyverse)
library(googlesheets)

# open "sheet" by title
sheet <- gs_title("sheet")

# open in browser
sheet %>% gs_browse()
gs_ws_ls(sheet)

t1 <- sheet %>% gs_read()

ss2 <- gs_new("sheet-01", ws_title = "iris-gs_new", input = head(iris),
              trim = TRUE, verbose = FALSE)
ss2 %>% gs_browse()
gs_delete(ss2)
#+END_SRC

** googlesheets update working sheets workflow
   using gs_ws_delete, gs_ws_add I should be able to swap entire updates working sheets

#+BEGIN_SRC R
library(tidyverse)
library(googlesheets)
key <- "1ZvA2mq8e99BPECqA_B_YIeVp-1vvnlNBf6GG0CAfehQ"
ss1 <- gs_key(key)
ss1 %>% gs_ws_ls()

ss1 %>% gs_ws_delete("iris-head")
ss1 <- ss1 %>% gs_gs() # re-register
ss1 %>% gs_ws_new("iris-head", input=head(iris))
ss1 <- ss1 %>% gs_gs() # re-register
ss1
#+END_SRC

** googledrive (tidyverse)

#+BEGIN_SRC R
library(tidyverse)
library(googledrive)
library(googlesheets)

drive_find("foo-sheet", type="spreadsheet")
x <- drive_get(id="1ZvA2mq8e99BPECqA_B_YIeVp-1vvnlNBf6GG0CAfehQ")
write_tsv(head(iris), "/tmp/iris-head.tsv")

# overwrite file
x %>% drive_update(media="/tmp/iris-head.tsv")

# multiple work sheets
write_tsv(head(cars), "/tmp/cars-head.tsv")
# Don't know how this should work - drive isn't really compatible with googlesheets objects
x %>% drive_update(media="/tmp/cars-head.tsv")
#+END_SRC


*** pull
Download spread sheet and split into tsv

#+BEGIN_SRC R
library(tidyverse)
library(googlesheets)
key <- "1ZvA2mq8e99BPECqA_B_YIeVp-1vvnlNBf6GG0CAfehQ"
ss1 <- gs_key(key)

# split sheet into tsvs
working_sheets <- ss1 %>% gs_ws_ls()
ws_pre <- paste0(ss1$sheet_title, "_")
for (ws in working_sheets){
    ws_tsv <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv')
    ws_new <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv.new')
    ws_bak <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv.bak')

    # download all to .new
    ss1 %>% gs_read(ws) %>%
        mutate_all(as.character) %>% # prevent scientific notation and weird dates
        write_tsv(ws_new)

    # bak old files of existing and different
    if(file.exists(ws_tsv) && system2("diff", c(ws_tsv, ws_new))){
        write(paste0("New content in ", ws_tsv,"backuped old version to ", ws_bak), stderr())
        file.rename(ws_tsv, ws_bak)
    }
    # rename newly downloaded files
    file.rename(ws_new, ws_tsv)
}
#+END_SRC

#+results:

*** push
Upload spreadsheet from tsv with seletive update

#+BEGIN_SRC R
library(tidyverse)
library(googlesheets)
key <- "1ZvA2mq8e99BPECqA_B_YIeVp-1vvnlNBf6GG0CAfehQ"
ss1 <- gs_key(key)

# split sheet into tsvs
working_sheets <- ss1 %>% gs_ws_ls()

for (ws in working_sheets){
    ws_tsv <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv')
    ws_old <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv.old')


    # if local copy was deleted - also delete on gd
    if(!file.exists(ws_tsv)){
        ss1 %>% gs_ws_delete(ws)
        ss1 <- ss1 %>% gs_gs() # re-register
        next
    }
    
    # if local copy exists: download and diff
    ss1 %>% gs_read(ws) %>%
        mutate_all(as.character) %>% # prevent scientific notation and weird dates
        write_tsv(ws_old)
    # diff
    ws_diff <- system2("diff", c(ws_tsv, ws_old))
    # upload only if diff
    if(ws_diff){
        ss1 %>% gs_ws_delete(ws)
        ss1 <- ss1 %>% gs_gs() # re-register
        ss1 %>% gs_ws_new(ws, input=read_tsv(ws_tsv))
        ss1 <- ss1 %>% gs_gs() # re-register
    }else{
        write(paste0("No changes in: ", ws, ". Skipping upload"), stderr())
    }
    file.remove(ws_old)
}
#+END_SRC

*** gs_ws_new() too slow
gs_ws_new doesn't do bulk upload of new data, but still some per cell/row magic
that takes forever with 1000x41 spreadsheet.

Might have to go via drive_update and tmp excel spreadsheet for upload

Need a way to write a tmp xls/xlsx sheet
https://github.com/awalker89/openxlsx
#+BEGIN_SRC R
#install.packages("openxlsx", dependencies=TRUE)
library(openxlsx)
library(tidyverse)

cars
iris
write.xlsx(list(cars=cars, iris=iris), "foo.xlsx")
#+END_SRC

** keep numbers as numbers in google
Currently, I am converting numbers to strings prior to tsv export to prevent
scientific notation issues and weird date formats. I use the same approach when
merging .tsv files into the .xlsx that is than uploaded to google. In google
numeric columns are formated as characters - I suspect because they were
characters in the .xlsx.

Google turns scientific numbers into plain numbers anyway, so no need to deal
with those while constructing the xlsx. Dates need to be converted to
characters, though, to retain the format.

#+BEGIN_SRC R
#!/usr/bin/env Rscript
library(magrittr)
library(tidyverse)
library(stringr)
library(googledrive)
library(googlesheets)
library(openxlsx)

ss <- drive_get(id="1ZvA2mq8e99BPECqA_B_YIeVp-1vvnlNBf6GG0CAfehQ")
ws_tsv <- "/tmp/iris-head.tsv"
ws_xlsx <- "/tmp/iris-head.xlsx"

d1 <- head(iris)

d1[1,1] <- 5e10

d1$date <- as.Date("1999-12-02")
is.numeric.Date(d1$date)
is.Date(d1$date)

write_tsv(d1, ws_tsv)

is.Date <- function(x) inherits(x, "Date")

ws <- read_tsv(ws_tsv) %>%
    mutate_if(is.Date, as.character) # prevent scientific notation and weird dates

# write xlsx, upload, cleanup
write.xlsx(ws, ws_xlsx)
ss %>% drive_update(media=ws_xlsx)
#+END_SRC



* Syncing Pro/Sar11 files
- Prochlorococcus :: https://docs.google.com/spreadsheets/d/1IhEKygYDi8xrM2J7AcBmYSqkw3SxeH6F-9_aqWxJ5dI/
- Sar11 :: https://docs.google.com/spreadsheets/d/1f4Uo8N183NPSWJqyrcf8KeOT7AW86peEBZ-TfPonMK4/


#+BEGIN_SRC R
library(tidyverse)
library(googlesheets)
setwd("/home/thackl/projects/research/metadata/genomes/prochlorococcus")

key <- "1IhEKygYDi8xrM2J7AcBmYSqkw3SxeH6F-9_aqWxJ5dI"

gss_read_keys <- function(keys_tsv="gss-keys.tsv"){
    if(!file.exists(keys_tsv)){
        stop(paste0("Key file (", keys_tsv, ") specifying keys of google spreadsheets to be synced required"), stderr())
    }
    (k1 <- read_tsv(keys_tsv, col_names="key"))
}

gss_pull(key)

gss_pull <- function(key){
    ss1 <- gs_key(key)

    # split sheet into tsvs
    working_sheets <- ss1 %>% gs_ws_ls()
    ws_pre <- paste0(ss1$sheet_title, "_")
    for (ws in working_sheets){
        ws_tsv <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv')
        ws_new <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv.new')
        ws_bak <- paste0(paste0(ss1$sheet_title, "_"), ws, '.tsv.bak')

        # download all to .new
        ss1 %>% gs_read(ws) %>%
            mutate_all(as.character) %>% # prevent scientific notation and weird dates
            write_tsv(ws_new)

        # bak old files of existing and different
        if(file.exists(ws_tsv) && system2("diff", c(ws_tsv, ws_new))){
            write(paste0("New content in ", ws_tsv,"backuped old version to ", ws_bak), stderr())
            file.rename(ws_tsv, ws_bak)
        }
        # rename newly downloaded files
        file.rename(ws_new, ws_tsv)
    }
}
#+END_SRC

